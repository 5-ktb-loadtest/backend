name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node_backend:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKER_USERNAME }}/node_backend:${IMAGE_TAG}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload and Run SSH Deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/node_backend:${IMAGE_TAG}
            sudo docker stop backend1 backend2 backend3 || true
            sudo docker rm backend1 backend2 backend3 || true

            cat <<'EOT' > /opt/app/backend/.env
            MONGO_URI=${{ secrets.MONGO_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
            PASSWORD_SALT=${{ secrets.PASSWORD_SALT }}
            EOT

            cat <<'EOT' > /opt/app/docker-compose.yml
            version: '3.8'
            services:
              backend1:
                image: ${{ secrets.DOCKER_USERNAME }}/node_backend:${IMAGE_TAG}
                container_name: backend1
                restart: always
                env_file:
                  - ./backend/.env
                environment:
                  - OTEL_TRACES_EXPORTER=otlp
                  - OTEL_EXPORTER_OTLP_ENDPOINT=https://ingest.us.signoz.cloud:443
                  - OTEL_NODE_RESOURCE_DETECTORS=env,host,os
                  - OTEL_SERVICE_NAME=v1-backend1
                  - OTEL_EXPORTER_OTLP_HEADERS=signoz-ingestion-key=${{ secrets.SIGNOZ_KEY }}
                  - NODE_OPTIONS=--require @opentelemetry/auto-instrumentations-node/register
                ports:
                  - "5000:5000"

              backend2:
                image: ${{ secrets.DOCKER_USERNAME }}/node_backend:${IMAGE_TAG}
                container_name: backend2
                restart: always
                env_file:
                  - ./backend/.env
                environment:
                  - OTEL_TRACES_EXPORTER=otlp
                  - OTEL_EXPORTER_OTLP_ENDPOINT=https://ingest.us.signoz.cloud:443
                  - OTEL_NODE_RESOURCE_DETECTORS=env,host,os
                  - OTEL_SERVICE_NAME=v1-backend2
                  - OTEL_EXPORTER_OTLP_HEADERS=signoz-ingestion-key=${{ secrets.SIGNOZ_KEY }}
                  - NODE_OPTIONS=--require @opentelemetry/auto-instrumentations-node/register
                ports:
                  - "5001:5000"

              backend3:
                image: ${{ secrets.DOCKER_USERNAME }}/node_backend:${IMAGE_TAG}
                container_name: backend3
                restart: always
                env_file:
                  - ./backend/.env
                environment:
                  - OTEL_TRACES_EXPORTER=otlp
                  - OTEL_EXPORTER_OTLP_ENDPOINT=https://ingest.us.signoz.cloud:443
                  - OTEL_NODE_RESOURCE_DETECTORS=env,host,os
                  - OTEL_SERVICE_NAME=v1-backend3
                  - OTEL_EXPORTER_OTLP_HEADERS=signoz-ingestion-key=${{ secrets.SIGNOZ_KEY }}
                  - NODE_OPTIONS=--require @opentelemetry/auto-instrumentations-node/register
                ports:
                  - "5002:5000"
            EOT

            cd /opt/app
            sudo docker compose up -d